.TH man 1 "August 27, 2019" "0.10" "simple_shell"
.SH NAME
simple_shell - Command language interpreter
.SH SYNOPSIS
\fB./hsh\fR
.SH DESCRIPTION
simple_shell is a customized command interpreter for the system that is a basic version of sh. We can perfom with some specific functions to work inside terminal.
.SH Overview
The simple_shell is a program that reads lines from the terminal, interprets them, and generally executes other commands. In case of a missing information or a mistake, the program will show to the user the kind of error.
.SH Invocation
The program can work both interactive and non-interactive mode.
.SH Commands
The shell interprets the words and reads them  according if are simple or builtins commands.
.SH Path Search
When locating a command, the shell first looks to see if it has a shell function by that name. Then it looks for a builtin command by that name. If a builtin command is not found, one of two things happen:
.P
1. Command names containing a slash are simply executed without performing any searches. The shell searches each entry in PATH in turn for the command.
.P
2. The value of the PATH variable should be a series of entries separated by colons. Each entry consists of a directory name. The current directory may be indicated implicitly by an empty directory name, or explicitly by a single period.
.SH EXIT STATUS
.P
Errors that are detected by the shell, such as a syntax error, will cause the shell to exit with a non-zero exit status.  If the shell is not an interactive shell, the execution of the shell file will be aborted.  Otherwise the shell will return the exit status of the last command executed, or if the exit builtin is used with a numeric argument, it will return the argument.
.SH BUILTINS
This section lists the builtin commands which are builtin because they
need to perform some operation that can't be performed by a separate
process.

.TP
exit [status]:
.P
Cause normal process termination, the status must be transmitted to the parent process. If the status is not defined by user its value is 0.
.TP
env:
.P
print enviroment.
.TP
setenv:
.P
Create or edit environmental variables.
.TP
unsetenv:
.P
Delete environmental variables.
.TP
cd:
.P
Changes the current directory of the process.

.SH ENVIRONMENT
.P
HOME: Set automatically by login from the user's login directory in the password file. This environment variable also functions as the default argument for the cd builtin.
.P
PATH: The default search path for executables.
.P
PWD: The logical value of the current working directory.  This is set by the cd command.
.P
OLDPWD: The previous logical value of the current working directory.  This is set by the cd command.
.P
PPID: The process ID of the parent process of the shell.
.SH SEE ALSO
.I printf(3)
.I chdir(2)
.I execve(2)
.I exit (3)
.I fflush (3)
.I fork (2)
.I free (3)
.I getcwd (3)
.I getline (3)
.I malloc (3)
.I read (2)
.I signal (2)
.I stat (2)
.I wait (3)
.I write (2)

.SH AUTHOR
David Peralta, Carlos Molano.
